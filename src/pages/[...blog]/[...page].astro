---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/blog/List.astro';
import Headline from '~/components/blog/Headline.astro';
import Pagination from '~/components/blog/Pagination.astro';

import { type Graph, type Blog } from 'schema-dts';

import { blogListRobots, getStaticPathsBlogList } from '~/utils/blog';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogList({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const currentPage = page.currentPage ?? 1;

const schema: Graph = {
  '@context': 'https://schema.org',
  '@graph': [
    {
      '@type': 'Blog',
      name: 'Blog',
      description: 'Guides, Product Updates, and Helpful Tips',
      url: 'https://failwarn.com/blog',
      image: 'https://failwarn.com/logo.png',
    } as Blog,
  ],
};

const metadata = {
  title: `Blog${currentPage > 1 ? ` â€” Page ${currentPage}` : ''} | FailWarn`,
  description: 'Guides, Product Updates, and Helpful Tips',
  robots: {
    index: blogListRobots?.index && currentPage === 1,
    follow: blogListRobots?.follow,
  },
  openGraph: {
    type: 'blog',
  },
};
---

<Layout metadata={metadata} schema={schema}>
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <Headline subtitle="Guides, Product Updates, and Helpful Tips"> The Blog </Headline>
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
